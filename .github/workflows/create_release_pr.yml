name: Create Release PR

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610 # v3.9.1
        with:
          node-version: 22
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Version bump
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Get release notes
        id: release-notes
        run: |
          # Get the last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            LAST_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Generate release notes
          NOTES=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/releases/generate-notes \
            -f tag_name="v${{ env.VERSION }}" \
            -f target_commitish="main" \
            -f previous_tag_name="${LAST_TAG}" | jq -r '.body')
          
          # Save to file to handle multiline content
          echo "$NOTES" > release-notes.md
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@4e1beaa7521e8b457b572c090b25bd3db56bf1c5 # v5.0.3
        with:
          branch: release/v${{ env.VERSION }}
          delete-branch: true
          title: "Release v${{ env.VERSION }}"
          body-path: release-notes.md
          commit-message: "chore: release v${{ env.VERSION }}"
          labels: |
            Type: Release
          assignees: ${{ github.actor }}
